import java.io.IOException;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;

public class SalesCount {

    // Mapper class: Phát ra quốc gia và giá trị 1 cho mỗi giao dịch
    public static class SalesMapper extends Mapper<Object, Text, Text, IntWritable> {
        private final static IntWritable one = new IntWritable(1);
        private Text country = new Text();

        public void map(Object key, Text value, Context context) throws IOException, InterruptedException {
            String[] fields = value.toString().split(",");
            if (fields.length > 7) {  // Kiểm tra xem có đủ trường dữ liệu
                country.set(fields[7]);  // Trích xuất quốc gia (trường thứ 7)
                context.write(country, one);  // Phát ra (quốc gia, 1)
            }
        }
    }

    // Reducer class: Tổng hợp số lượng bán hàng cho mỗi quốc gia
    public static class SalesReducer extends Reducer<Text, IntWritable, Text, IntWritable> {
        public void reduce(Text key, Iterable<IntWritable> values, Context context) throws IOException, InterruptedException {
            int sum = 0;
            for (IntWritable val : values) {
                sum += val.get();  // Tính tổng số lượng giao dịch
            }
            context.write(key, new IntWritable(sum));  // Phát ra (quốc gia, tổng giao dịch)
        }
    }

    // Main method: Cấu hình và chạy công việc MapReduce
    public static void main(String[] args) throws Exception {
        Configuration conf = new Configuration();
        Job job = Job.getInstance(conf, "Sales Count by Country");

        job.setJarByClass(SalesCount.class);
        job.setMapperClass(SalesMapper.class);
        job.setCombinerClass(SalesReducer.class);  // Sử dụng combiner để tối ưu
        job.setReducerClass(SalesReducer.class);

        job.setOutputKeyClass(Text.class);
        job.setOutputValueClass(IntWritable.class);

        // Đường dẫn đầu vào và đầu ra từ tham số dòng lệnh
        FileInputFormat.addInputPath(job, new Path(args[0]));  // Tệp CSV đầu vào
        FileOutputFormat.setOutputPath(job, new Path(args[1]));  // Thư mục đầu ra

        // Kết thúc và chạy công việc
        System.exit(job.waitForCompletion(true) ? 0 : 1);
    }
}
